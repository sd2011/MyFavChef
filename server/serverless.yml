org: stavd
app: get-random-videos
service: myfavchef

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    HUB_SECRET: ${env:HUB_SECRET}
    
functions:
  randomVideo:
    handler: handler.randomVideo
    events:
      - http:
          path: get-random-video
          method: get
          cors: true
    vpc:
      securityGroupIds:
        - ${env:LAMBDA_RDS_SECURITY_GROUP_ID}
      subnetIds:
        - ${env:SUBNET_ID1}
        - ${env:SUBNET_ID2}
        - ${env:SUBNET_ID3}
        - ${env:SUBNET_ID4}
        - ${env:SUBNET_ID5}
        - ${env:SUBNET_ID6}

  youtubeWebhook:
    handler: handler.youtubeWebhook
    events:
      - http:
          path: youtube
          method: post
          cors: true
    vpc:
      securityGroupIds:
        - ${env:LAMBDA_RDS_SECURITY_GROUP_ID}
      subnetIds:
        - ${env:SUBNET_ID1}
        - ${env:SUBNET_ID2}
        - ${env:SUBNET_ID3}
        - ${env:SUBNET_ID4}
        - ${env:SUBNET_ID5}
        - ${env:SUBNET_ID6}

        
resources:
  Resources:
    VideoRDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        DBName: ${self:provider.environment.DB_NAME}
        Engine: mysql  
        MasterUsername: ${self:provider.environment.DB_USER}
        MasterUserPassword: ${self:provider.environment.DB_PASSWORD}
        AllocatedStorage: 20
        DBInstanceClass: db.t3.micro  
        PubliclyAccessible: false  
        Tags:
          - Key: Name
            Value: VideoRDSInstance
        VPCSecurityGroups:
          - ${env:RDS_LAMBDA_SECURITY_GROUP_ID}  
    
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

